
/*

   kadane's   Algorithms:

intialize :
max_so_far=min_value;
max_ending_here=0;
loop for each element of the array
a)max_ending_here=max_ending_here+a[i]
b)if(max_so_far<max_ending_here)
max_so_far=max_ending_here;
c)if(max_ending_here<0)
max_ending_here=0;
return max_so_far;

*/




package algorithms;
public class KadensAlgorithms {
   public static void main(String args[])
   {
       int arr[]={-2,-3,4,-1,-2,1,5,-3};
       int max_so_far=Integer.MIN_VALUE;
       int max_ending_here=0;
       for(int i=0;i<arr.length;++i)
       {
           max_ending_here=max_ending_here+arr[i];
           if(max_ending_here>max_so_far)
           {
               max_so_far=max_ending_here;
           }
           else if(max_ending_here<0)
           {
               max_ending_here=0;
           }
       }
       System.out.print(max_so_far);
   }
    
}
